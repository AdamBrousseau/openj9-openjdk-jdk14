# ===========================================================================
# (c) Copyright IBM Corp. 2017, 2020 All Rights Reserved
# ===========================================================================
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.
#
# IBM designates this particular file as subject to the "Classpath" exception
# as provided by IBM in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, see <http://www.gnu.org/licenses/>.
# ===========================================================================

TARGETS += \
	$(INCLUDE_TARGET_DIR)/jvmti.h \
	$(INCLUDE_TARGET_DIR)/ibmjvmti.h \
	#

$(INCLUDE_TARGET_DIR)/jvmti.h : $(OUTPUTDIR)/vm/include/jvmti.h
	$(call install-file)

$(INCLUDE_TARGET_DIR)/ibmjvmti.h : $(TOPDIR)/openj9/runtime/include/ibmjvmti.h
	$(call install-file)

##########################################################################################
# Optionally copy OpenSSL Crypto Lbrary
# To bundle first search for openssl 1.1.x library, if not found, search for 1.0.x
ifneq ($(OPENSSL_BUNDLE_LIB_PATH), )
  ifeq ($(OPENJDK_TARGET_OS), linux)
    LIBCRYPTO_NAMES := libcrypto.so.1.1 libcrypto.so.1.0.0
  else ifeq ($(OPENJDK_TARGET_OS), macosx)
    LIBCRYPTO_NAMES := libcrypto.1.1.dylib libcrypto.1.0.0.dylib
  else ifeq ($(OPENJDK_TARGET_OS), windows)
    ifeq ($(OPENJDK_TARGET_CPU_BITS), 64)
      LIBCRYPTO_NAMES := libcrypto-1_1-x64.dll
    else
      LIBCRYPTO_NAMES := libcrypto-1_1.dll
    endif
    LIBCRYPTO_NAMES += libeay32.dll
  else ifeq ($(OPENJDK_TARGET_OS), aix)
    # OpenSSL 1.1.1 on AIX has switched to use archive library files (natural way)
    # instead of 'libcrypto.so' files.
    # For reference, corresponding OpenSSL PR is
    #     https://github.com/openssl/openssl/pull/6487
    LIBCRYPTO_NAMES := libcrypto.so.1.1 libcrypto.so.1.0.0 libcrypto.a
  else
    LIBCRYPTO_NAMES := libcrypto.so
  endif
  LIBCRYPTO_PATH := $(firstword $(wildcard $(addprefix $(OPENSSL_BUNDLE_LIB_PATH)/, $(LIBCRYPTO_NAMES))))
  ifeq ($(LIBCRYPTO_PATH), )
    $(error Cannot bundle OpenSSL - none of $(LIBCRYPTO_NAMES) are present in $(OPENSSL_BUNDLE_LIB_PATH))
  endif

  LIBCRYPTO_TARGET_LIB := $(LIB_DST_DIR)/$(notdir $(LIBCRYPTO_PATH))
  TARGETS += $(LIBCRYPTO_TARGET_LIB)
  $(LIBCRYPTO_TARGET_LIB) : $(LIBCRYPTO_PATH)
	$(call install-file)
  ifeq ($(OPENJDK_BUILD_OS), macosx)
    # update @rpath of the crypto library as the default is /usr/local/lib/
	install_name_tool -id "@rpath/$(@F)" $@
  else ifeq ($(OPENJDK_BUILD_OS), windows)
	$(CHMOD) a+rx $@
  endif
	$(call CodesignFile,"$@")

  ifeq (true,$(OPENJ9_ENABLE_JITSERVER))
    ifeq ($(OPENJDK_TARGET_OS), linux)
      LIBSSL_NAMES := libssl.so.1.1 libssl.so.1.0.0
      LIBSSL_PATH := $(firstword $(wildcard $(addprefix $(OPENSSL_BUNDLE_LIB_PATH)/, $(LIBSSL_NAMES))))

      ifneq ($(LIBSSL_PATH), )
        LIBSSL_TARGET_LIB = $(LIB_DST_DIR)/$(notdir $(LIBSSL_PATH))
        TARGETS += $(LIBSSL_TARGET_LIB)
        $(LIBSSL_TARGET_LIB) : $(LIBSSL_PATH)
			$(call install-file)
			$(call CodesignFile,"$@")
      endif # LIBSSL_PATH
    endif # OPENJDK_TARGET_OS
  endif # OPENJ9_ENABLE_JITSERVER
endif # OPENSSL_BUNDLE_LIB_PATH
################################################################################
